Prod_ym = paste(Prod_year, Prod_month, sep="-")) #to create "time points" for plotting
head(wells)
class(wells$Prod_ym)
# Chunk 13: dplyr-summarize
head(wells$Prod_period)
prod_days_by_area <- wells %>%
group_by(Area_name) %>%
summarize(
total_prod_days = sum(Prod_days)
)
head(prod_days_by_area)
prod_days_by_area %>% filter(total_prod_days > 500000) %>%
ggplot(aes(x = Area_name, y = total_prod_days)) +
geom_col() +
ggtitle("Total Production Days for most productive areas", ) +
ylab("Production days") +
xlab("Area")
# Chunk 14: histogram
wells %>% filter(Cond_prod_vol_m3 > 0) %>%
ggplot() +
geom_histogram(mapping = aes(Cond_prod_vol_m3))
# let's limit our data to the wells which had production (100-1000). Here, we use default number of bins (30)
wells %>% filter(Cond_prod_vol_m3 > 100, Cond_prod_vol_m3 < 1000) %>%
ggplot() +
geom_histogram(mapping = aes(Cond_prod_vol_m3))
# increase number of bins to 200 to see the difference
wells %>% filter(Cond_prod_vol_m3 > 100, Cond_prod_vol_m3 < 1000) %>%
ggplot() +
geom_histogram(mapping = aes(Cond_prod_vol_m3), bins=200) +
ggtitle("Distribution of condensate production per production period") +
xlab(expression("Condensate production per production period m"^3))
# Chunk 15: tables
# Using tables we can see how many wells we have for each formation
wells %>% group_by(Formtn_name) %>%
summarize(
count_wells = n_distinct(Wa_num),#count unique well numbers (multiple prod. periods)
mean_wtr_prod = mean(Water_prod_vol_m3)
) %>% arrange(desc(count_wells))
# we can find which areas / formations are suspected to have more water disposal wells than HC production wells
wells %>% group_by(Area_name) %>%
summarize(
count_wells = n_distinct(Wa_num),
mean_wtr_prod = mean(Water_prod_vol_m3)
) %>% arrange(desc(mean_wtr_prod))
# Chunk 16: water-production-scatterplots
# let's look again on the selected columns of original dataframe
wells %>% select(Water_prod_vol_m3, Gas_prod_vol_e3m3, Oil_prod_vol_m3, Cond_prod_vol_m3) %>%
head(3)
# we will use gather function to create new column "Prod_type" which will contain the "Prod_volume" value for gas, oil and condensate production. We assign the results to new dataframe.
prod_df <- wells %>%
gather(key = "Prod_type",
value = "Prod_volume",
c(Gas_prod_vol_e3m3, Oil_prod_vol_m3, Cond_prod_vol_m3)) %>%
select(Water_prod_vol_m3, Prod_volume, Prod_year, Prod_ym, Prod_type, Prod_days, Formtn_name)
prod_df %>% select(Water_prod_vol_m3, Prod_type) %>% head(3)
# indeed, we have production type in Prod_type column!
unique(prod_df$Prod_type)
# let's visualize that quickly
prod_df %>%
filter(Prod_year == 2021) %>%
ggplot(aes(x = Water_prod_vol_m3, y = Prod_volume, colour = Prod_type)) +
geom_point()
# add some axis limits
prod_df %>%
filter(Prod_year == 2021) %>%
ggplot(aes(x = Water_prod_vol_m3, y = Prod_volume, colour = Prod_type)) +
geom_point() +
xlim(0,10000) +
ylim(0,25000)
# visualize each type of production separately
prod_df %>%
filter(Prod_year == 2021) %>%
ggplot(aes(x = Water_prod_vol_m3, y = Prod_volume, colour = Prod_type)) +
geom_point() +
facet_wrap(~Prod_type)
# create indepentent y axis for each chart, since the production is in different units.
prod_df %>%
filter(Prod_year == 2021) %>%
ggplot(aes(x = Water_prod_vol_m3, y = Prod_volume, colour = Prod_type, alpha = 0.3)) +
geom_point() +
facet_wrap(~Prod_type, scales = "free") # scales free => not fixed limits of yaxis
# I expect that Prod_volume = 0 correspond to Saltwater Disposal wells, so let's remove those from the plot.
prod_df %>%
filter(Prod_year == 2021, Prod_volume > 0) %>% # Prod_colume > 0 to remove disposal wells
ggplot(aes(x = Water_prod_vol_m3, y = Prod_volume, colour = Prod_type, alpha = 0.3)) +
geom_point() +
ggtitle("Water production per HC type") +
facet_wrap(~Prod_type, scales = "free") +
xlim(0,5000)
# Chunk 17: bar-charts
### Let's start with geom_col to visualize the production per period...
wells %>% subset(Prod_year > 2000) %>%
group_by(Prod_ym) %>%
summarise(
prod_per_period = sum(Cond_prod_vol_m3)
) %>%
ggplot(aes(x = Prod_ym, y = prod_per_period)) +
theme(axis.text.x = element_text(angle = 90)) +
geom_col()
### ...and per year. Which one is more useful / interesting?
wells %>%
subset(Prod_year > 2000) %>%
group_by(Prod_year) %>%
summarise(
prod_per_year = sum(Cond_prod_vol_m3)
) %>%
ggplot(aes(x = Prod_year, y = prod_per_year)) +
geom_col()
# Chunk 18: more-bar-charts
# first let's create dataframe with summed produced values by formation
prod_by_formation <- wells %>%
group_by(Formtn_name) %>%
summarise(
oil_prod_total = sum(Oil_prod_vol_m3),
gas_prod_total = sum(Gas_prod_vol_e3m3),
cond_prod_total = sum(Cond_prod_vol_m3),
water_prod_total = sum(Water_prod_vol_m3)
) %>%
ungroup()
# find 5 most productive gas formation
most_gas <- prod_by_formation %>%
arrange(desc(gas_prod_total)) %>%
head(5)
ggplot(most_gas, aes(x = Formtn_name, y = gas_prod_total)) +
geom_col(fill='#ff6347') # change color to red
# we can use a trick to order the bars according to production value (using mutate function)
most_gas <- most_gas %>%
mutate(Formtn_name=factor(Formtn_name, levels=Formtn_name))
ggplot(most_gas, aes(x = Formtn_name, y = gas_prod_total)) +
geom_col(fill='#ff6347') # change color to red
# same for oil production
most_oil <- prod_by_formation %>%
arrange(desc(oil_prod_total)) %>%
head(5) %>%
mutate(Formtn_name=factor(Formtn_name, levels=Formtn_name))
ggplot(most_oil, aes(x = Formtn_name, y = oil_prod_total)) +
geom_col()
# and for condensate production
most_cond <- prod_by_formation %>%
arrange(desc(cond_prod_total)) %>%
head(5) %>%
mutate(Formtn_name=factor(Formtn_name, levels=Formtn_name))
ggplot(most_gas, aes(x = Formtn_name, y = gas_prod_total)) +
geom_col(fill="#6495ed")
# Chunk 19: even-more-bar-charts
# define 5 most productive formations
best_formations <- unique(most_oil$Formtn_name,
most_gas$Formtn_name,
most_cond$Formtn_name)
# plot oil production
wells %>%
subset(Formtn_name %in% best_formations) %>%
ggplot(aes(x = Formtn_name, y = Oil_prod_vol_m3, fill=Formtn_name)) +
geom_col() +
ggtitle("Total oil production by formation") +
xlab("Formation") +
ylab("Oil production [m3]")
# plot gas production
prod_by_formation %>%
subset(Formtn_name %in% best_formations) %>%
ggplot(aes(x = Formtn_name, y = gas_prod_total, fill=Formtn_name)) +
geom_col() +
ggtitle("Total gas production by formation") +
xlab("Formation") +
ylab("Gas production [e3m3]")
# plot condensate production
prod_by_formation %>%
subset(Formtn_name %in% best_formations) %>%
ggplot(aes(x = Formtn_name, y = cond_prod_total, fill=Formtn_name)) +
geom_col() +
ggtitle("Total condensate production by formation") +
xlab("Formation") +
ylab("Condensate production [m3]")
# plot water production
prod_by_formation %>%
subset(Formtn_name %in% best_formations) %>%
ggplot(aes(x = Formtn_name, y = water_prod_total, fill=Formtn_name)) +
geom_col() +
ggtitle("Total water production by formation") +
xlab("Formation") +
ylab("Water production [m3]")
# Chunk 20: line-graphs
# reminder: available formation names in our dataframe
unique(wells$Formtn_name)[1:20]
# let's visualize only one formation first
formtnName = "BLUESKY"
prod_df %>%
filter(Formtn_name == formtnName) %>%
group_by(Prod_ym, Formtn_name, Prod_type) %>%
summarise(
total_prod = sum(Prod_volume)
) %>%
ungroup() %>%
ggplot(aes(x = Prod_ym, y = total_prod, group=Formtn_name, col=Prod_type)) +
geom_line() +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free") +
ggtitle(paste("Production per year for formation", formtnName))
#  and now production from all formations in one chart
prod_df %>%
group_by(Prod_ym, Prod_type) %>%
summarise(
total_prod = sum(Prod_volume)
) %>%
ungroup() %>%
ggplot(aes(x = Prod_ym, y = total_prod, group=1, col=Prod_type)) +
geom_line() +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free") +
ggtitle("Total production per year")
# Chunk 21: facets
#library(tidyverse)
# here we plot the count of wells per year for all formations
ggplot(data = wells, aes(x = Prod_year)) +
geom_bar()
# filter wells for most productive formations and most recent wells. Add some colors (fill) selected manually (scale_fill_manual)
ggplot(filter(wells, Formtn_name %in% best_formations & Prod_year < 2021)) +
geom_bar(aes(x = Formtn_name, fill=Formtn_name)) +
scale_fill_manual(values = c('#d0d1e6','#a6bddb','#67a9cf','#1c9099','#016c59')) + # taken e.g. from colorbrewer
facet_wrap(~ Prod_year) +
theme(axis.text.x = element_blank(), # remove ticks #cosmetics
axis.ticks.x = element_blank(),
axis.title.x = element_blank())
# let's filter the data first and summarize the production
prod_per_period <- prod_df %>%
filter(Formtn_name %in% best_formations) %>%
group_by(Prod_ym, Prod_type, Formtn_name) %>%
summarise(
prod_per_period = sum(Prod_volume)
)
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, group=Formtn_name)) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p)
p
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, group=Formtn_name), fill=Formtn_name) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p)
p
library(plotly)
head(prod_df)
# let's filter the data first and summarize the production
prod_per_period <- prod_df %>%
filter(Formtn_name %in% best_formations) %>%
group_by(Prod_ym, Prod_type, Formtn_name) %>%
summarise(
prod_per_period = sum(Prod_volume)
)
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, group=Formtn_name), fill=Formtn_name) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p)
p
, fill=Formtn_name
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, group=Formtn_name, fill=Formtn_name)) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p)
p
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, fill=Formtn_name)) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p)
p
, group=Formtn_name
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, group=Formtn_name, fill=Formtn_name)) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p)
p
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, group=Formtn_name, fill=Formtn_name)) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
text = paste("Formation:", Formtn_name,"<br>Prod. type:", Prod_type)
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p)
p
p <- ggplotly(p, tooltip = "text")
p
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, group=Formtn_name, fill=Formtn_name)) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
text = paste("Formation:", Formtn_name,"<br>Prod. type:", Prod_type)
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p, tooltip = "text")
p
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, group=Formtn_name, fill=Formtn_name)) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
text = paste("Formation:", Formtn_name,"<br>Prod. type:", Prod_type) +
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p, tooltip = "text")
p
library(plotly)
head(prod_df)
# let's filter the data first and summarize the production
prod_per_period <- prod_df %>%
filter(Formtn_name %in% best_formations) %>%
group_by(Prod_ym, Prod_type, Formtn_name) %>%
summarise(
prod_per_period = sum(Prod_volume)
)
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, group=Formtn_name, fill=Formtn_name)) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
text = paste("Formation:", Formtn_name,"<br>Prod. type:", Prod_type) +
facet_grid(Prod_type ~ ., scales = "free")
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, group=Formtn_name, fill=Formtn_name)) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p)
p
prod_per_period
prod_df %>%
filter(Formtn_name %in% best_formations) %>%
group_by(Prod_ym, Prod_type, Formtn_name) %>%
summarise(
prod_per_period = sum(Prod_volume)
)
prod_per_period %>% arrange(Prod_type,Formtn_name)
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, fill=Formtn_name)) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p)
p
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, group=Formtn_name, fill=Formtn_name)) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p)
p
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, group=Formtn_name, fill=Formtn_name, text=Formtn_name)) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p)
p
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, text=Formtn_name), group=Formtn_name, fill=Formtn_name) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p)
p
group=Formtn_name, fill=Formtn_name,
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, group=Formtn_name, fill=Formtn_name, text=Formtn_name)) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p)
p
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, group=Formtn_name, fill=Formtn_name, text=name), name ="Formtn_name") +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p)
p
prod_per_period %>% arrange(Prod_type,Formtn_name)
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, group=Formtn_name, fill=Formtn_name, text=name), name ="Formtn_name") +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p)
p
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, group=Formtn_name, fill=Formtn_name, text=name), name=prod_per_period.Formtn_name) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p)
p
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, group=Formtn_name, fill=Formtn_name, text=Formtn_name)) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p)
p
# let's plot it according to the production type
p <- prod_per_period %>%
ggplot(aes(x=Prod_ym, y=prod_per_period, fill=Formtn_name)) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p)
p
prod_per_period
prod_per_period %>%
ggplot(aes(x=Prod_ym, y=prod_per_period, fill=Formtn_name)) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free")
# let's plot it according to the production type
p <- prod_per_period %>%
ggplot(aes(x=Prod_ym, y=prod_per_period, group=Formtn_name, fill=Formtn_name)) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p)
p
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, group=Formtn_name)) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p)
p
, fill=Formtn_name
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, group=Formtn_name, fill=Formtn_name)) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p)
p
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, group=Formtn_name, fill=Formtn_name, text = paste("Formation:", Formtn_name,
"<br>Prod. type:", Prod_type))) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free")
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, group=Formtn_name, fill=Formtn_name, text = paste("Formation:", Formtn_name,
"<br>Prod. type:", Prod_type))) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01",
"2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p)
p
p <- ggplotly(p, tooltip = text)
p
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, group=Formtn_name, fill=Formtn_name, text = paste("Formation:", Formtn_name,
"<br>Prod. type:", Prod_type))) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01", "2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p, tooltip = text)
p
p <- ggplotly(p, tooltip = "text")
p
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, group=Formtn_name, fill=Formtn_name, text = paste("Formation:", Formtn_name,
"<br>Prod. type:", Prod_type))) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01", "2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p, tooltip = "text")
p
# let's plot it according to the production type
p <- ggplot(prod_per_period, aes(x=Prod_ym, y=prod_per_period, group=Formtn_name, fill=Formtn_name, text = paste("Formation:", Formtn_name,
"<br>Production vol:", prod_per_period))) +
geom_area(alpha=0.3) +
scale_x_discrete(breaks = c("2016-01", "2017-01","2018-01", "2019-01","2020-01", "2021-01")) +
facet_grid(Prod_type ~ ., scales = "free")
p <- ggplotly(p, tooltip = "text")
p
